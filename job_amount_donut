import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.lines as mlines
import plotly.express as px
!pip install -U kaleido


salaries = pd.read_csv('salaries.csv')
not_other = ['Data Engineer', 'Data Scientist', 'Data Analyst', 'Machine Learning Engineer']
salaries['job_title'] = salaries['job_title'].apply(lambda x: 'Other (includes 119 job titles)' if x not in not_other else x)
salaries

# Group by 'Job_Title' and calculate the mean salary and count for each job title
salary_stats_df = salaries.groupby('job_title')['salary_in_usd'].agg(['mean', 'count']).reset_index()

# Rename the columns
salary_stats_df.columns = ['Job Title', 'Mean Salary', 'Job Count']

# Sort the DataFrame by 'Job_Count' in descending order
mean_salary_df = salary_stats_df.sort_values(by='Job Count', ascending=False)

# Round the salary to two decimals
mean_salary_df['Mean Salary'] = mean_salary_df['Mean Salary'].round(-3)

index_to_move = 0  
row_to_move = mean_salary_df.iloc[[index_to_move]]

# Exclude the row to be moved
mean_salary_df = pd.concat([mean_salary_df[:index_to_move], mean_salary_df[index_to_move + 1:]])

# Concatenate the row at the end of the DataFrame
mean_salary_df = pd.concat([mean_salary_df, row_to_move])

# Reset the index and drop the default index column
mean_salary_df = mean_salary_df.reset_index(drop=True)

# Display the sorted DataFrame
mean_salary_df.head(10)


colormap = {'Data Engineer':'#fb8072',
            'Data Scientist':'#bebada',
            'Data Analyst':'#ffed6f',
            'Machine Learning Engineer':'#8dd3c7',
            'Other (includes 119 job titles)':'lightgrey'}
fig = px.pie(mean_salary_df, values = mean_salary_df['Job Count'], names = mean_salary_df['Job Title'], hole = 0.5, 
             color = mean_salary_df['Job Title'], color_discrete_map = colormap, hover_data = ['Mean Salary'], 
             #labels={'Job Title':'Job Title', 'count':'Salary'}, 
             custom_data = 'Mean Salary', width = 600, height = 600,
             category_orders = {'Job Title':['Data Engineer', 'Data Scientist', 'Data Analyst', 'Machine Learning Engineer', 'Other']},
             )
#value = mean_salary_df['Job Count'], label = mean_salary_df['Job Title'], customdata=mean_salary_df['Mean Salary']

# Increase the size of label text
fig.update_traces(textfont_size=16)  

# Increase the font size of hover labels
fig.update_traces(hoverinfo='label+percent', hoverlabel=dict(font_size=16))

centertext = "Most Common <br> Data Science <br> Positions"
fig.update_layout(
    annotations=[dict(text=centertext, x=0.5, y=0.5, font_size=18, showarrow=False)])

# Update Traces: used source https://stackoverflow.com/questions/60158618/plotly-how-to-add-elements-to-hover-data-using-plotly-express-piechart
fig.update_traces(text = mean_salary_df['Job Title'], textposition='outside',
                 hovertemplate = "Job Title: %{label} <br>Job Count: %{value} </br>Mean Salary: $%{customdata} Annual Salary")
fig.update_layout(showlegend = False)
#fig.write_image("datadonut.png")
#fig.write_html("datadonut.html")
fig.show()